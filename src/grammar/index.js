import { LRParser, LocalTokenGroup } from '@lezer/lr';
import { styleTags, tags } from '@lezer/highlight';

const highlighting = styleTags({
  Number: tags.number,
  String: tags.string,
  MyExpression: tags.content,
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: "!^OVQPOOO[OQO'#C^QVQPOOOOQO'#C_'#C_OOOO'#C`'#C`OgOQO,58xOOQO,58x,58xOOQO-E6]-E6]OOOO-E6^-E6^OOQO1G.d1G.d",
  stateData: "r~OVOS~OWPO~OXSOYSOZUO~OXSOYSOZXO~O",
  goto: "fTPPUY`TROQQQORVQQTPRWT",
  nodeNames: "âš  File MyExpression",
  maxTerm: 11,
  nodeProps: [
    ["isolate", 2,""]
  ],
  propSources: [highlighting],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "!U~RZX^tpqt#o#py#y#zt$f$gt#BY#BZt$IS$I_t$I|$JOt$JT$JUt$KV$KWt&FU&FVt~yOV~~|P#o#p!P~!UOW~",
  tokenizers: [1, new LocalTokenGroup("j~RQYZX#q#r^~^OY~~aP#q#rd~iOZ~~", 25, 9)],
  topRules: {"File":[0,1]},
  tokenPrec: 0
});

export { parser };
